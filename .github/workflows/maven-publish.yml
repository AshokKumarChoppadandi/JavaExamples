# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Build Maven Package and Publish to Maven Central

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
      - release

  pull_request:
    branches:
      - main
      - release

  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Permissions of the GitHub token
    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out to the repository under $GITHUB_WORKSPACE, so the build job can access it
      - name:  Step 1 - Checking out to main branch.
        uses: actions/checkout@v4

      # # Setting up the JDK 8
      # - name: Step 2 - Set up JDK 8 for publishing to GitHub packages
      #   uses: actions/setup-java@v4
      #   with:
      #     java-version: '8'
      #     distribution: 'zulu'
      #     # settings-path: .
      #
      # # Publish the Maven Project to GitHub Packages
      # - name: Step 3 - Publish Maven Artifacts to GitHub Packages
      #   run: mvn --batch-mode deploy
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.MAVEN_PUBLISH_TOKEN }}
      #     MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
      #     MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      # Setting up the JDK  8
      - name: Step 4 - Set up JDK 8 for publishing to Maven Central
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'zulu'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN

      # Publish the Maven Project to Maven Central
      - name: Step 5 - Publish Maven Artifacts to Maven Central
        run: mvn -Dskip.publish.to.central=false -Dfail.on.build.failure=true --batch-mode deploy -P prod
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Step 6 - List the built files
        run: |
          cd target
          ls -a

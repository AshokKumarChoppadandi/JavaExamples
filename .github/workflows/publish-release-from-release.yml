# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish release to GitHub Packages & Maven Central

# Controls when the workflow will run
on:

  # Allows you to run this workflow manually from the Actions tab

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Permissions of the GitHub token
    permissions:
      contents: read
      packages: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out to the repository under $GITHUB_WORKSPACE, so the build job can access it
      - name:  Step 1 - Checking out to main branch.
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MAVEN_PUBLISH_TOKEN }}
          persist-credentials: true

      # Setting up the JDK 8
      - name: Step 2 - Set up JDK 8 for publishing to GitHub packages
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'zulu'
          # settings-path: .

      - name: Step 4 - Set up GitHub User and Email
        run: |
          git config --global user.email "github-actions"
          git config --global user.name "github-actions@github.com"

      - name: Step 5 - GitHub Packages - Prepare for release
        run: mvn --batch-mode release:branch
        env:
          GITHUB_TOKEN: ${{ secrets.MAVEN_PUBLISH_TOKEN }}
          MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Step 6 - GitHub Packages - Perform the release
        run: mvn --batch-mode release:perform
        env:
          GITHUB_TOKEN: ${{ secrets.MAVEN_PUBLISH_TOKEN }}
          MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      # # Publish the Maven Project to GitHub Packages
      # - name: Step 3 - Publish Maven Artifacts to GitHub Packages
      #   # This activates the default profile - dev
      #   run: mvn --batch-mode deploy
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.MAVEN_PUBLISH_TOKEN }}
      #     MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
      #     MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      # # Setting up the JDK  8
      # - name: Step 4 - Set up JDK 8 for publishing to Maven Central
      #   uses: actions/setup-java@v4
      #   with:
      #     java-version: '8'
      #     distribution: 'zulu'
      #     server-id: central
      #     server-username: MAVEN_USERNAME
      #     server-password: MAVEN_CENTRAL_TOKEN
      #
      # - name: Step 5 - Maven Central - Prepare for release
      #   run: mvn -Dskip.publish.to.central=false -Dfail.on.build.failure=true --batch-mode release:prepare -P prod
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.MAVEN_PUBLISH_TOKEN }}
      #     MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
      #     MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      #
      # - name: Step 6 - Maven Central - Perform the release
      #   run: mvn -Dskip.publish.to.central=false -Dfail.on.build.failure=true --batch-mode release:perform -P prod
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.MAVEN_PUBLISH_TOKEN }}
      #     MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
      #     MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      # # Publish the Maven Project to Maven Central
      # - name: Step 5 - Publish Maven Artifacts to Maven Central
      #   run: mvn -Dskip.publish.to.central=false -Dfail.on.build.failure=true --batch-mode deploy -P prod
      #   env:
      #     MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
      #     MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
      #     MAVEN_GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
      #     MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      # Listing files and directories in target directory
      - name: Step 7 - List the built files
        run: |
          cd target
          ls -a